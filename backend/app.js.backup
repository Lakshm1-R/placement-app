const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const dotenv = require('dotenv');

dotenv.config();

const app = express();

// Middleware
app.use(cors());
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

console.log('Starting to load routes...');

console.log('Loading auth routes...');
const authRoutes = require('./routes/auth');
console.log('Auth routes type:', typeof authRoutes);

console.log('Loading job-drives routes...');
const jobDriveRoutes = require('./routes/jobDrives');
console.log('JobDrive routes type:', typeof jobDriveRoutes);

console.log('Loading users routes...');
const userRoutes = require('./routes/users');
console.log('User routes type:', typeof userRoutes);

console.log('Loading profile routes...');
const profileRoutes = require('./routes/profile');
console.log('Profile routes type:', typeof profileRoutes);

console.log('Loading placement-consent routes...');
const placementConsentRoutes = require('./routes/placementConsent');
console.log('Placement routes type:', typeof placementConsentRoutes);

console.log('Loading placement-analytics routes...');
const placementAnalyticsRoutes = require('./routes/placementAnalytics');
console.log('Placement Analytics routes type:', typeof placementAnalyticsRoutes);
console.log('✅ Placement Analytics routes loaded successfully');

console.log('\n=== ABOUT TO LOAD DELETION REQUESTS ===');
console.log('Loading deletion-requests routes...');
const deletionRequestRoutes = require('./routes/deletionRequests');
console.log('Deletion Request routes type:', typeof deletionRequestRoutes);
console.log('✅ Deletion Request routes loaded successfully');
console.log('=== DELETION REQUESTS LOADED ===\n');

console.log('Finished loading routes');

// Use routes
app.use('/api/auth', authRoutes);
app.use('/api/job-drives', jobDriveRoutes);
app.use('/api/users', userRoutes);
app.use('/api/profile', profileRoutes);
app.use('/api/placement-consent', placementConsentRoutes);
app.use('/api/placement-analytics', placementAnalyticsRoutes);
app.use('/api/deletion-requests', deletionRequestRoutes);

// Test route
app.get('/api/test', (req, res) => {
  res.json({ message: 'Backend is working!' });
});

// Error handling middleware
app.use((err, req, res, next) => {
  console.error(err.stack);
  res.status(500).json({ message: 'Something went wrong!' });
});

// 404 handler
app.use('*', (req, res) => {
  console.log('404 - Route not found:', req.originalUrl);
  res.status(404).json({ message: 'Route not found' });
});

const PORT = process.env.PORT || 5000;

mongoose.connect(process.env.MONGODB_URI || 'mongodb://localhost:27017/placement-system')
  .then(() => {
    console.log('MongoDB connected successfully');
    app.listen(PORT, () => {
      console.log(`Server running on port ${PORT}`);
      console.log('Available routes:');
      console.log('- /api/auth');
      console.log('- /api/job-drives');
      console.log('- /api/users');
      console.log('- /api/profile');
      console.log('- /api/placement-consent');
      console.log('- /api/placement-analytics');
      console.log('- /api/deletion-requests');
    });
  })
  .catch((error) => {
    console.error('MongoDB connection error:', error);
  });

module.exports = app;


